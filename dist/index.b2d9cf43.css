*, :before, :after {
  box-sizing: border-box;
  background-repeat: no-repeat;
}

* {
  margin: 0;
}

body {
  -webkit-font-smoothing: antialiased;
  line-height: 1.5;
}

img, picture, video, figure, canvas, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

input, button, textarea, select {
  font: inherit;
  color: inherit;
  letter-spacing: inherit;
  border: 1px solid WindowFrame;
  background-color: #0000;
  padding: .25em .375em;
}

[type="color"], [type="range"] {
  border-width: 0;
  padding: 0;
}

button, input[type="submit"], [role="button"], details > summary, [aria-controls] {
  cursor: pointer;
}

textarea {
  resize: vertical;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

ul[role="list"], ol[role="list"] {
  list-style: none;
}

html:focus-within {
  scroll-behavior: smooth;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
}

[aria-busy="true"] {
  cursor: progress;
}

[aria-disabled="true"], [disabled] {
  cursor: default;
}

body {
  --bg: #fafffe;
  --bg2: #eaf0ef;
  --bg-top: #e4eeec;
  --text: #00170d;
  --primary: #2f735b;
  --secondary: #ae3f1e;
}

body.dark-mode {
  --bg: #0e1110;
  --bg2: #191c1a;
  --bg-top: #262a28;
  --text: #d3f3ed;
  --text2: #67817c;
  --primary: #60d6bb;
  --secondary: #f2dd6e;
}

a {
  color: var(--primary);
  text-decoration: none;
}

a:hover, a:focus {
  color: var(--secondary);
}

.primary {
  color: var(--primary);
}

.secondary {
  color: var(--secondary);
}

.toggle {
  position: relative;
}

.toggle__switch {
  --height: 24px;
  --width: calc(var(--height) * 2);
  border-radius: var(--height);
  height: var(--height);
  width: var(--width);
  background-color: #ccc;
  margin-right: .3rem;
  transition: background-color .2s;
  position: relative;
}

.toggle__switch:after {
  content: "";
  width: calc(var(--height)  - 4px);
  height: calc(var(--height)  - 4px);
  background-color: #fff;
  border-radius: 50%;
  transition: all .2s;
  position: absolute;
  top: 2px;
  left: 2px;
}

.toggle__label {
  cursor: pointer;
  align-items: center;
  font-size: .9rem;
  font-style: italic;
  display: flex;
}

.toggle__input {
  opacity: 0;
  display: none;
}

.toggle__input:checked + .toggle__label .toggle__switch {
  background-color: var(--primary);
}

.toggle__input:checked + .toggle__label .toggle__switch:after {
  transform: translateX(var(--height));
}

.select-container {
  flex-direction: column;
  font-size: .8rem;
  display: flex;
}

.select-container label {
  font-weight: 600;
}

h1, .title-1 {
  font-size: 4vw;
  font-weight: 500;
}

h2, .title-2 {
  font-size: 3.4vw;
  font-weight: 600;
}

:root {
  --sine_in: cubic-bezier(.47, 0, .745, .715);
  --sine_out: cubic-bezier(.39, .575, .565, 1);
  --sine_inout: cubic-bezier(.445, .05, .55, .95);
  --quad_in: cubic-bezier(.55, .085, .68, .53);
  --quad_out: cubic-bezier(.25, .46, .45, .94);
  --quad_inout: cubic-bezier(.455, .03, .515, .955);
  --cubic_in: cubic-bezier(.55, .055, .675, .19);
  --cubic_out: cubic-bezier(.215, .61, .355, 1);
  --cubic_inout: cubic-bezier(.645, .045, .355, 1);
  --quart_in: cubic-bezier(.895, .03, .685, .22);
  --quart_out: cubic-bezier(.165, .84, .44, 1);
  --quart_inout: cubic-bezier(.77, 0, .175, 1);
  --quint_in: cubic-bezier(.755, .05, .855, .06);
  --quint_out: cubic-bezier(.23, 1, .32, 1);
  --quint_inout: cubic-bezier(.86, 0, .07, 1);
  --expo_in: cubic-bezier(.95, .05, .795, .035);
  --expo_out: cubic-bezier(.19, 1, .22, 1);
  --expo_inout: cubic-bezier(1, 0, 0, 1);
  --circ_in: cubic-bezier(.6, .04, .98, .335);
  --circ_out: cubic-bezier(.075, .82, .165, 1);
  --circ_inout: cubic-bezier(.785, .135, .15, .86);
  --back_in: cubic-bezier(.6, -.28, .735, .045);
  --back_out: cubic-bezier(.175, .885, .32, 1.275);
  --back_inout: cubic-bezier(.68, -.55, .265, 1.55);
}

html {
  font-size: 16px;
  line-height: 1.6;
}

body {
  font-variant-ligatures: no-common-ligatures;
  color: var(--text);
  background-color: var(--bg);
  font-family: Junction;
  font-size: 1rem;
}

.topbar {
  border-bottom: 1px solid var(--text2);
  background: var(--bg-top);
  color: var(--text);
  z-index: 5;
  justify-content: space-between;
  width: 100%;
  padding: 1rem 10%;
  display: flex;
  position: fixed;
}

.effects {
  max-width: 100%;
  margin-bottom: 50vh;
  padding-top: 100px;
  position: relative;
  overflow: hidden;
}

.effect {
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding-inline: 10%;
  display: flex;
  position: relative;
}

.effect:nth-child(2n) {
  background-color: var(--bg2);
}

:root {
  --char_translate-x: 3px;
  --char_translate-y: 50%;
  --char_step: 25ms;
  --char_ease: var(--quad_in);
  --char_duration: .5s;
  --char_translate_step: 3px;
  --char_mult_line: 2;
  --word_duration: .5s;
  --word_step: .2s;
  --word_ease: var(--quad_in);
}

.effect__text, .effect__text .char, .effect__text .word {
  will-change: transform;
}

.effect__text.split .char, .effect__text.split .word {
  transform-style: preserve-3d;
  position: relative;
}

.effect__text.split .char {
  opacity: 0;
  --char_delay: calc(var(--char_index) * var(--char_step));
  position: relative;
}

.effect__text.split .word {
  opacity: 0;
  --word_delay: calc(var(--word_index) * var(--word_step));
}

.in-view .effect__text.split .char, .in-view .effect__text.split .word {
  opacity: 1;
}

.show-all .effect__text.split .char, .show-all .effect__text.split .word {
  opacity: 1 !important;
  clip-path: none !important;
}

.in-view .effect__text.split .char {
  transition-duration: var(--char_duration);
  transition-timing-function: var(--char_ease);
  transition-property: opacity;
  transition-delay: var(--char_delay);
  opacity: 1;
}

.effect__text.split[data-anim="chars-fade-up"] {
  --char_duration: .4s;
  --char_rotate-x: 0;
  --char_translate-z: 5px;
  --char_ease: var(--cubic-out);
  --char_translate-y: 30%;
}

.effect__text.split[data-anim="chars-fade-up"] .line {
  perspective: var(--wrap_perspective);
}

.effect__text.split[data-anim="chars-fade-up"] .char {
  transform: translateY(var(--char_translate-y)) translateZ(var(--char_translate-z)) rotateX(var(--char_rotate-x)) scale(1);
}

.in-view .effect__text.split[data-anim="chars-fade-up"] .char {
  transition-property: opacity, transform;
  transform: none;
}

.effect__text.split[data-anim="chars-swipe"] {
  --char_duration: .5s;
  --char_step: 20ms;
  --char_ease: var(--sine_out);
}

.effect__text.split[data-anim="chars-swipe"] .char {
  clip-path: inset(0% 100% 0 0);
}

.in-view .effect__text.split[data-anim="chars-swipe"] .char {
  transition-property: clip-path, opacity;
  transition-delay: var(--char_delay);
  clip-path: inset(0 0 -10%);
}

.effect__text.split[data-anim="words-swipe"] {
  --word_step: .1s;
  --word_ease: var(--quad_in);
}

.effect__text.split[data-anim="words-swipe"] .word {
  clip-path: inset(0% 100% 0 0);
  opacity: 1;
}

.in-view .effect__text.split[data-anim="words-swipe"] .word {
  clip-path: inset(0 0 -10%);
  transition-property: clip-path;
  transition-duration: var(--word_duration);
  transition-timing-function: var(--word_ease);
  transition-delay: var(--word_delay);
}

.effect__text.split[data-anim="chars-slide"] {
  --char_ease: var(--quad_inout);
}

.effect__text.split[data-anim="chars-slide"] .char {
  --char_translate-x: calc(0px + var(--char_translate_step) * var(--char_index_line)  + var(--line_index) * var(--char_translate_step) * var(--char_mult_line));
  transform: translateX(var(--char_translate-x));
}

.in-view .effect__text.split[data-anim="chars-slide"] .char {
  transition-property: transform, opacity;
  transform: none;
}

.effect__text.split[data-anim="faded-chars"] {
  --char_duration: .3s;
  --char_step: 25ms;
  --char_ease: var(--quad_in);
}

.effect__text.split[data-anim="faded-chars"] .char {
  opacity: 1;
  color: #0000001a;
}

.effect__text.split[data-anim="faded-chars"] .char:before {
  content: attr(data-char);
  color: #000;
  clip-path: inset(0 101% 0 0);
  transition-property: clip-path;
  position: absolute;
  top: 0;
  left: 0;
}

.in-view .effect__text.split[data-anim="faded-chars"] .char:before {
  clip-path: inset(0 -10% 0 0);
  transition-delay: var(--char_delay);
  transition-duration: inherit;
  transition-timing-function: inherit;
}

.dark-mode .effect__text.split[data-anim="faded-chars"] .char {
  color: #ffffff1a;
}

.dark-mode .effect__text.split[data-anim="faded-chars"] .char:before {
  color: #fff;
}

/*# sourceMappingURL=index.b2d9cf43.css.map */
