@use './styles/reset';
@use './styles/colors';
@use './styles/toggle';
@use './styles/controls';
@use './styles/type';
@use './styles/ease';

html {
    font-size: 16px;
    line-height: 1.6;
}

body {
    font-family: 'Junction';
    font-variant-ligatures: no-common-ligatures;
    font-size: 1rem;
    color: var(--text);
    background-color: var(--bg);
}

.topbar {
    position: fixed;
    width: 100%;
    border-bottom: 1px solid var(--text2);
    padding: 1rem 10%;
    display: flex;
    justify-content: space-between;
    background: var(--bg-top);
    color: var(--text);
    z-index: 5;
}

.effects {
    padding-top: 100px;
    max-width: 100%;
    overflow: hidden;
    position: relative;
    margin-bottom: 50vh;
}

.effect {
    padding-inline: 10%;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    &:nth-child(2n) {
        background-color: var(--bg2);
    }
}

:root {
    --char_translate-x: 3px;
    --char_translate-y: 50%;
    --char_step: 0.025s;
    --char_ease: var(--quad_in);
    --char_duration: 0.5s;

    --char_translate_step: 3px;
    --char_mult_line: 2;

    --word_duration: 0.5s;
    --word_step: 0.2s;
    --word_ease: var(--quad_in);
}

.effect__text {
    will-change: transform;
    .char,
    .word {
        will-change: transform;
    }
}

.effect__text.split {
    .char,
    .word {
        position: relative;
        transform-style: preserve-3d;
    }
    .char {
        position: relative;
        opacity: 0;
        --char_delay: calc(var(--char_index) * var(--char_step));
    }

    .word {
        opacity: 0;
        --word_delay: calc(var(--word_index) * var(--word_step));
    }

    .in-view & {
        .char,
        .word {
            opacity: 1;
        }
    }

    .show-all & {
        .char,
        .word {
            opacity: 1 !important;
            // transform: none !important;
            clip-path: none !important;
        }
    }

    .in-view & {
        .char {
            transition-duration: var(--char_duration);
            transition-timing-function: var(--char_ease);
            transition-property: opacity;
            transition-delay: var(--char_delay);
            opacity: 1;
        }
    }

    &[data-anim='chars-fade-up'] {
        --char_duration: 0.4s;
        --char_rotate-x: 0;
        --char_translate-z: 5px;
        --char_ease: var(--cubic-out);
        // --wrap_perspective: 100px;

        --char_translate-y: 30%;
        .line {
            perspective: var(--wrap_perspective);
        }
        .char {
            transform: translateY(var(--char_translate-y)) translateZ(var(--char_translate-z))
                rotateX(var(--char_rotate-x)) scale(1);
        }
        .in-view & .char {
            transform: none;
            transition-property: opacity, transform;
        }
    }

    &[data-anim='chars-swipe'] {
        --char_duration: 0.5s;
        --char_step: 0.02s;
        --char_ease: var(--sine_out);
        .char {
            clip-path: inset(0% 100% 0 0);
        }

        .in-view & .char {
            transition-property: clip-path, opacity;
            transition-delay: var(--char_delay);
            clip-path: inset(0 0 -10% 0);
        }
    }

    &[data-anim='words-swipe'] {
        --word_step: 0.1s;
        --word_ease: var(--quad_in);

        .word {
            clip-path: inset(0% 100% 0 0);
            opacity: 1;
        }

        .in-view & .word {
            transition-property: clip-path;
            clip-path: inset(0 0 -10% 0);
            transition-duration: var(--word_duration);
            transition-timing-function: var(--word_ease);
            transition-delay: var(--word_delay);
        }
    }

    &[data-anim='chars-slide'] {
        --char_ease: var(--quad_inout);
        .char {
            --char_translate-x: calc(
                0px + var(--char_translate_step) * var(--char_index_line) + var(--line_index) *
                    var(--char_translate_step) * var(--char_mult_line)
            );
            transform: translateX(var(--char_translate-x));
        }

        .in-view & .char {
            transform: none;
            transition-property: transform, opacity;
        }
    }

    &[data-anim='faded-chars'] {
        --char_duration: 0.3s;
        --char_step: 0.025s;
        --char_ease: var(--quad_in);
        .char {
            opacity: 1;
            color: rgba(0, 0, 0, 0.1);
            &:before {
                position: absolute;
                content: attr(data-char);
                top: 0;
                left: 0;
                color: rgba(0, 0, 0, 1);
                transition-property: clip-path;
                clip-path: inset(0 101% 0 0);
            }
        }

        .in-view & .char:before {
            clip-path: inset(0 -10% 0 0);
            transition-delay: var(--char_delay);
            transition-duration: inherit;
            transition-timing-function: inherit;
        }

        @at-root .dark-mode & {
            .char {
                color: rgba(255, 255, 255, 0.1);
                &:before {
                    color: rgba(255, 255, 255, 1);
                }
            }
        }
    }
}
